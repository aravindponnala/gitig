# Generated by Django 2.2 on 2020-12-10 06:56

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Articles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article_title', models.CharField(max_length=250)),
                ('summery', models.CharField(max_length=1000)),
                ('authors', models.CharField(max_length=150)),
                ('content', models.TextField()),
                ('published_on', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DERMATOLOGY', models.TextField()),
                ('EYES', models.TextField()),
                ('LUNGS', models.TextField()),
                ('EARS', models.TextField()),
                ('GASTROINTESTINAL', models.TextField()),
                ('NOSE_THROAT', models.TextField()),
                ('UROGENITAL', models.TextField()),
                ('MOUTH_TEETH_GUMS', models.TextField()),
                ('MUSKULOSKELETAL', models.TextField()),
                ('HEART', models.TextField()),
                ('others', models.TextField()),
                ('date', models.DateField(default=datetime.date.today)),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('summary', models.TextField()),
                ('file', models.FileField(upload_to='books/%Y/%m/%d/')),
            ],
        ),
        migrations.CreateModel(
            name='bookmarks_article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='bookmarks_books',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='bookmarks_case_reports',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='bookmarks_conferences',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='bookmarks_seminars',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='bookmarks_vet_news',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='cancel_booking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_id', models.CharField(max_length=20)),
                ('date', models.DateField(default=datetime.date.today)),
            ],
        ),
        migrations.CreateModel(
            name='Case_Reports',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('author', models.CharField(max_length=50)),
                ('email', models.CharField(max_length=50)),
                ('published_on', models.DateField()),
                ('content', models.TextField()),
                ('link', models.CharField(max_length=600)),
            ],
        ),
        migrations.CreateModel(
            name='Conferences',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('location', models.CharField(max_length=150)),
                ('content', models.TextField()),
                ('timings', models.TimeField()),
                ('url_link', models.TextField()),
                ('date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Consultation_Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pet_id', models.CharField(max_length=30)),
                ('razorpay_payment_id', models.CharField(max_length=20)),
                ('razorpay_order_id', models.CharField(max_length=20)),
                ('razorpay_signature', models.TextField()),
                ('razorpay_payment_status', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_id', models.CharField(max_length=20)),
                ('customer_name', models.CharField(max_length=50)),
                ('email', models.CharField(max_length=50)),
                ('mobile', models.CharField(max_length=15)),
                ('password', models.CharField(max_length=250)),
                ('address', models.TextField()),
                ('subscribed', models.BooleanField(default=False)),
                ('date', models.DateField(default=datetime.date.today)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerSubscribed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscribed_date', models.DateField(default=datetime.date.today)),
                ('subscribed_expiry', models.DateField(default=datetime.date(2021, 12, 10))),
            ],
        ),
        migrations.CreateModel(
            name='Deworming',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_date', models.DateField()),
                ('due_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='deworming_Remainder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deworming_list', models.TextField()),
                ('hospital', models.CharField(max_length=50)),
                ('doctor', models.CharField(max_length=30)),
                ('remiander_date', models.DateField(default=datetime.date.today)),
                ('date', models.DateField(default=datetime.date.today)),
            ],
        ),
        migrations.CreateModel(
            name='Diagnostics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('haematology', models.TextField()),
                ('biochemistry', models.TextField()),
                ('harmones', models.TextField()),
                ('microbiology', models.TextField()),
                ('parasitology', models.TextField()),
                ('serology', models.TextField()),
                ('cytology', models.TextField()),
                ('rapid_test', models.TextField()),
                ('radiology', models.TextField()),
                ('others', models.TextField()),
                ('date', models.DateField(default=datetime.date.today)),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name_of_doctor', models.CharField(max_length=50)),
                ('Qualification', models.CharField(max_length=30)),
                ('Registration_number', models.CharField(max_length=30)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('Gender', models.CharField(max_length=10)),
                ('Date_of_birth', models.DateField()),
                ('Experience', models.IntegerField()),
                ('Hospital', models.CharField(max_length=50)),
                ('Email', models.CharField(max_length=50)),
                ('Mobile', models.CharField(max_length=15)),
                ('Telephone', models.CharField(max_length=15)),
                ('Address', models.TextField()),
                ('consultation_fee', models.IntegerField()),
                ('subscription_fee', models.IntegerField()),
                ('password', models.CharField(max_length=30)),
                ('mode', models.CharField(max_length=8)),
                ('time_slot', models.TextField()),
                ('stock_management', models.CharField(max_length=5)),
                ('message', models.TextField()),
                ('live_management', models.CharField(max_length=5)),
                ('date', models.DateField(default=datetime.date.today)),
            ],
        ),
        migrations.CreateModel(
            name='doctor_message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('date', models.DateField(default=datetime.date.today)),
            ],
        ),
        migrations.CreateModel(
            name='DoctorLogList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment', models.CharField(max_length=20)),
                ('color', models.CharField(max_length=20)),
                ('mode', models.CharField(max_length=8)),
                ('time_slot', models.CharField(max_length=20)),
                ('meeting_id', models.TextField()),
                ('booking_date', models.DateField(default=datetime.date.today)),
                ('test_field', models.CharField(default='yes', max_length=5)),
                ('date', models.DateField(default=datetime.date.today)),
            ],
        ),
        migrations.CreateModel(
            name='DoctorViewLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment', models.CharField(max_length=20)),
                ('mode', models.CharField(max_length=20)),
                ('consultation_fee', models.CharField(max_length=20)),
                ('time_slot', models.CharField(max_length=20)),
                ('meeting_id', models.TextField()),
                ('booking_date', models.DateField(default=datetime.date.today)),
                ('booking_expiry', models.DateTimeField()),
                ('booking_expiry_date', models.DateField(default=datetime.date.today)),
                ('date', models.DateField(default=datetime.date.today)),
                ('status', models.CharField(choices=[('A', 'ACTIVE'), ('C', 'CLOSE'), ('CN', 'CANCEL'), ('EX', 'EXPIRED')], default='A', max_length=7)),
            ],
        ),
        migrations.CreateModel(
            name='followup_Remainder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hospital', models.CharField(max_length=50)),
                ('doctor', models.CharField(max_length=30)),
                ('remiander_date', models.DateField(default=datetime.date.today)),
                ('date', models.DateField(default=datetime.date.today)),
            ],
        ),
        migrations.CreateModel(
            name='Form_Unic_Number',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form_number', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='gallery_image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_id', models.CharField(max_length=20)),
                ('gal_img', models.FileField(upload_to='gallery/%Y/%m/%d/')),
            ],
        ),
        migrations.CreateModel(
            name='License_Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pet_id', models.CharField(max_length=30)),
                ('razorpay_payment_id', models.CharField(max_length=20)),
                ('razorpay_order_id', models.CharField(max_length=20)),
                ('razorpay_signature', models.TextField()),
                ('razorpay_payment_status', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='License_Pet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file1', models.FileField(upload_to='license/')),
                ('file2', models.FileField(upload_to='license/')),
                ('file3', models.FileField(upload_to='license/')),
                ('file4', models.FileField(upload_to='license/')),
                ('license_aprrove', models.CharField(choices=[('Y', 'YES'), ('N', 'NO')], default='N', max_length=5)),
                ('govt_certified_users', models.CharField(choices=[('Y', 'YES'), ('N', 'NO')], default='N', max_length=5)),
                ('valid_date', models.DateField(default=datetime.date.today)),
            ],
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consultation_fee', models.CharField(max_length=20)),
                ('final_fee', models.CharField(max_length=20)),
                ('pet_id', models.CharField(max_length=30)),
                ('mode', models.CharField(max_length=20)),
                ('booking_date', models.DateField(default=datetime.date.today)),
                ('booking_expiry', models.DateTimeField()),
                ('time_slot', models.CharField(max_length=20)),
                ('booking_id', models.CharField(max_length=30)),
                ('booking_expiry_date', models.DateField(default=datetime.date.today)),
                ('date', models.DateField(default=datetime.date.today)),
                ('status', models.CharField(choices=[('A', 'ACTIVE'), ('C', 'CLOSE'), ('CN', 'CANCEL'), ('EX', 'EXPIRED')], default='A', max_length=7)),
            ],
        ),
        migrations.CreateModel(
            name='notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification', models.TextField()),
                ('customer_id', models.CharField(max_length=20)),
                ('palyerid', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Pet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pet_id', models.CharField(max_length=30)),
                ('name', models.CharField(max_length=50)),
                ('breed', models.CharField(max_length=50)),
                ('dob', models.DateField(default=datetime.date.today)),
                ('gender', models.CharField(max_length=10)),
                ('address', models.TextField()),
                ('licence_number', models.TextField()),
                ('pet_license', models.CharField(choices=[('Y', 'YES'), ('N', 'NO')], default='N', max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='petimage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_id', models.CharField(max_length=20)),
                ('pet_image', models.FileField(upload_to='petimage/%Y/%m/%d/')),
                ('img', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medicine1_name', models.CharField(max_length=250)),
                ('medicine1', models.CharField(max_length=500)),
                ('medicine1_quantity', models.CharField(max_length=250)),
                ('medicine2_name', models.CharField(max_length=250)),
                ('medicine2', models.CharField(max_length=500)),
                ('medicine2_quantity', models.CharField(max_length=250)),
                ('medicine3_name', models.CharField(max_length=250)),
                ('medicine3', models.CharField(max_length=500)),
                ('medicine3_quantity', models.CharField(max_length=250)),
                ('medicine4_name', models.CharField(max_length=250)),
                ('medicine4', models.CharField(max_length=500)),
                ('medicine4_quantity', models.CharField(max_length=250)),
                ('medicine5_name', models.CharField(max_length=250)),
                ('medicine5', models.CharField(max_length=500)),
                ('medicine5_quantity', models.CharField(max_length=250)),
                ('medicine6_name', models.CharField(max_length=250)),
                ('medicine6', models.CharField(max_length=500)),
                ('medicine6_quantity', models.CharField(max_length=250)),
                ('medicine_other_name', models.CharField(max_length=250)),
                ('medicine_other', models.CharField(max_length=500)),
                ('medicine_other_quantity', models.CharField(max_length=250)),
                ('Prescription_img', models.FileField(upload_to='doctorpres')),
                ('followup_date', models.DateField(blank=True, default='1000-01-01', null=True)),
                ('followup_date_unit', models.CharField(max_length=10)),
                ('date', models.DateField(default=datetime.date.today)),
            ],
        ),
        migrations.CreateModel(
            name='PurposeAndDiet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diet', models.CharField(max_length=30)),
                ('diet_state', models.CharField(max_length=30)),
                ('disease', models.CharField(max_length=500)),
                ('vaccination_purpose', models.CharField(max_length=100)),
                ('symptoms_text', models.TextField()),
                ('date', models.DateField(default=datetime.date.today)),
                ('status', models.CharField(choices=[('A', 'ACTIVE'), ('C', 'CLOSE')], default='A', max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='Razorpay_Dashboard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Payment_id', models.CharField(max_length=30)),
                ('order_id', models.CharField(max_length=30)),
                ('booking_id', models.CharField(max_length=30)),
                ('payment_status', models.CharField(max_length=30)),
                ('amount_paid', models.IntegerField(max_length=7)),
                ('doctor_name', models.CharField(max_length=30)),
                ('doctor_mobile', models.BigIntegerField(max_length=15)),
                ('customer_name', models.CharField(max_length=30)),
                ('customer_mobile', models.BigIntegerField(max_length=15)),
                ('pet', models.CharField(max_length=50)),
                ('payment_date', models.DateTimeField(default=datetime.date.today)),
            ],
        ),
        migrations.CreateModel(
            name='Seminars',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('location', models.CharField(max_length=150)),
                ('content', models.TextField()),
                ('timings', models.TimeField()),
                ('url_link', models.TextField()),
                ('date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Summary_analytics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pet', models.CharField(max_length=30)),
                ('id_pk', models.CharField(max_length=30)),
                ('visit_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Vet_News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('location', models.CharField(max_length=150)),
                ('content', models.TextField()),
                ('timings', models.TimeField()),
                ('url_link', models.TextField()),
                ('date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Vitals',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Temperature', models.CharField(blank=True, max_length=30, null=True)),
                ('Height', models.CharField(blank=True, max_length=30, null=True)),
                ('Weight', models.CharField(blank=True, max_length=20, null=True)),
                ('Pulse_rate', models.CharField(blank=True, max_length=20, null=True)),
                ('Respiration_rate', models.CharField(blank=True, max_length=30, null=True)),
                ('Age_of_maturity', models.CharField(blank=True, max_length=15, null=True)),
                ('Oestrus', models.CharField(blank=True, max_length=15, null=True)),
                ('Pregnancy', models.CharField(blank=True, max_length=15, null=True)),
                ('date', models.DateField(default=datetime.date.today)),
                ('purpose_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='pet.PurposeAndDiet')),
            ],
        ),
        migrations.CreateModel(
            name='Vccination_Remainder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vacanation_list', models.TextField()),
                ('hospital', models.CharField(max_length=50)),
                ('doctor', models.CharField(max_length=30)),
                ('remiander_date', models.DateField(default=datetime.date.today)),
                ('date', models.DateField(default=datetime.date.today)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pet.Customer')),
                ('pet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pet.Pet')),
            ],
        ),
        migrations.CreateModel(
            name='Vaccination_coustmer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_date_3_in_1_DAPV', models.DateField(default='1000-01-01')),
                ('last_date_4_in_1_DHPP', models.DateField(default='1000-01-01')),
                ('last_date_5_in_1_DA2PP', models.DateField(default='1000-01-01')),
                ('last_date_6_in_1_DA2PPC', models.DateField(default='1000-01-01')),
                ('last_date_7in1_DA2PPVL2', models.DateField(default='1000-01-01')),
                ('last_date_rabies', models.DateField(default='1000-01-01')),
                ('last_date_distemper', models.DateField(default='1000-01-01')),
                ('last_date_CAV_1', models.DateField(default='1000-01-01')),
                ('last_date_parovirus', models.DateField(default='1000-01-01')),
                ('last_date_parainfluenza', models.DateField(default='1000-01-01')),
                ('last_date_bordetella', models.DateField(default='1000-01-01')),
                ('last_date_Can_L', models.DateField(default='1000-01-01')),
                ('last_date_lyme', models.DateField(default='1000-01-01')),
                ('last_date_corona', models.DateField(default='1000-01-01')),
                ('last_date_giardia', models.DateField(default='1000-01-01')),
                ('last_date_CAV_2', models.DateField(default='1000-01-01')),
                ('last_date_leptospirosis', models.DateField(default='1000-01-01')),
                ('last_date_9_in_1_vaccine', models.DateField(default='1000-01-01')),
                ('last_date_10_in_1_vaccine', models.DateField(default='1000-01-01')),
                ('last_date_Feline_vaccine', models.DateField(default='1000-01-01')),
                ('last_deworming', models.DateField(default='1000-01-01')),
                ('date', models.DateField(default=datetime.date.today)),
                ('pet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pet.Pet')),
            ],
        ),
        migrations.CreateModel(
            name='Vaccination',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_date_3_in_1_DAPV', models.DateField()),
                ('due_date_3_in_1_DAPV', models.DateField()),
                ('last_date_4_in_1_DHPP', models.DateField()),
                ('due_date_4_in_1_DHPP', models.DateField()),
                ('last_date_5_in_1_DA2PP', models.DateField()),
                ('due_date_5_in_1_DA2PP', models.DateField()),
                ('last_date_6_in_1_DA2PPC', models.DateField()),
                ('due_date_6_in_1_DA2PPC', models.DateField()),
                ('last_date_7_in_1_DA2PPVL2', models.DateField()),
                ('due_date_7_in_1_DA2PPVL2', models.DateField()),
                ('last_date_rabies', models.DateField()),
                ('due_date_rabies', models.DateField()),
                ('last_date_distemper', models.DateField()),
                ('due_date_distemper', models.DateField()),
                ('last_date_CAV_1', models.DateField()),
                ('due_date_CAV_1', models.DateField()),
                ('last_date_parovirus', models.DateField()),
                ('due_date_parovirus', models.DateField()),
                ('last_date_parainfluenza', models.DateField()),
                ('due_date_parainfluenza', models.DateField()),
                ('last_date_bordetella', models.DateField()),
                ('due_date_bordetella', models.DateField()),
                ('last_date_CAV_2', models.DateField()),
                ('due_date_CAV_2', models.DateField()),
                ('last_date_lyme', models.DateField()),
                ('due_date_lyme', models.DateField()),
                ('last_date_corona', models.DateField()),
                ('due_date_corona', models.DateField()),
                ('last_date_giardia', models.DateField()),
                ('due_date_giardia', models.DateField()),
                ('last_date_Can_L', models.DateField()),
                ('due_date_Can_L', models.DateField()),
                ('last_date_leptospirosis', models.DateField()),
                ('due_date_leptospirosis', models.DateField()),
                ('last_date_9_in_1_vaccine', models.DateField(default='1000-01-01')),
                ('last_date_10_in_1_vaccine', models.DateField(default='1000-01-01')),
                ('last_date_Feline_vaccine', models.DateField(default='1000-01-01')),
                ('due_date_9_in_1_vaccine', models.DateField(default='1000-01-01')),
                ('due_date_10_in_1_vaccine', models.DateField(default='1000-01-01')),
                ('due_date_Feline_vaccine', models.DateField(default='1000-01-01')),
                ('date', models.DateField(default=datetime.date.today)),
                ('pet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pet.Pet')),
                ('purpose_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='pet.PurposeAndDiet')),
            ],
        ),
        migrations.CreateModel(
            name='Symptoms',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField()),
                ('date', models.DateField(default=datetime.date.today)),
                ('purpose_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='pet.PurposeAndDiet')),
            ],
        ),
        migrations.CreateModel(
            name='stock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medicine', models.TextField()),
                ('quantity', models.TextField()),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pet.Doctor')),
            ],
        ),
        migrations.AddConstraint(
            model_name='razorpay_dashboard',
            constraint=models.UniqueConstraint(fields=('order_id', 'Payment_id'), name='razorpay_dashbo'),
        ),
        migrations.AddField(
            model_name='purposeanddiet',
            name='pet_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pet.Pet'),
        ),
        migrations.AddField(
            model_name='prescription',
            name='purpose_id',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='pet.PurposeAndDiet'),
        ),
        migrations.AddField(
            model_name='petimage',
            name='pet_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pet.Pet'),
        ),
        migrations.AddField(
            model_name='pet',
            name='customer_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pet.Customer'),
        ),
        migrations.AddField(
            model_name='log',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pet.Customer'),
        ),
        migrations.AddField(
            model_name='log',
            name='doctor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pet.Doctor'),
        ),
        migrations.AddField(
            model_name='log',
            name='purpose_id',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='pet.PurposeAndDiet'),
        ),
        migrations.AddField(
            model_name='license_pet',
            name='pet_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pet.Pet'),
        ),
        migrations.AddConstraint(
            model_name='license_payment',
            constraint=models.UniqueConstraint(fields=('razorpay_order_id', 'razorpay_payment_id'), name='license_dashbo'),
        ),
        migrations.AddField(
            model_name='followup_remainder',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pet.Customer'),
        ),
        migrations.AddField(
            model_name='followup_remainder',
            name='pet_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pet.Pet'),
        ),
        migrations.AddField(
            model_name='doctorviewlog',
            name='customer_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pet.Customer'),
        ),
        migrations.AddField(
            model_name='doctorviewlog',
            name='doc_pk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pet.Doctor'),
        ),
        migrations.AddField(
            model_name='doctorviewlog',
            name='pet_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pet.Pet'),
        ),
        migrations.AddField(
            model_name='doctorviewlog',
            name='purpose_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purpose', to='pet.PurposeAndDiet'),
        ),
        migrations.AddField(
            model_name='doctorloglist',
            name='customer_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pet.Customer'),
        ),
        migrations.AddField(
            model_name='doctorloglist',
            name='doc_pk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pet.Doctor'),
        ),
        migrations.AddField(
            model_name='doctorloglist',
            name='pet_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pet.Pet'),
        ),
        migrations.AddField(
            model_name='doctorloglist',
            name='purpose_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pet.PurposeAndDiet'),
        ),
        migrations.AddField(
            model_name='doctor_message',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pet.Customer'),
        ),
        migrations.AddField(
            model_name='doctor_message',
            name='doctor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pet.Doctor'),
        ),
        migrations.AddField(
            model_name='diagnostics',
            name='purpose_id',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='pet.PurposeAndDiet'),
        ),
        migrations.AddField(
            model_name='deworming_remainder',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pet.Customer'),
        ),
        migrations.AddField(
            model_name='deworming_remainder',
            name='pet_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pet.Pet'),
        ),
        migrations.AddField(
            model_name='deworming',
            name='pet',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pet.Pet'),
        ),
        migrations.AddField(
            model_name='deworming',
            name='purpose_id',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='pet.PurposeAndDiet'),
        ),
        migrations.AddField(
            model_name='customersubscribed',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pet.Customer'),
        ),
        migrations.AddConstraint(
            model_name='consultation_payment',
            constraint=models.UniqueConstraint(fields=('razorpay_order_id', 'razorpay_payment_id'), name='consultat_dashbo'),
        ),
        migrations.AddField(
            model_name='cancel_booking',
            name='doctor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pet.Doctor'),
        ),
        migrations.AddField(
            model_name='cancel_booking',
            name='pet_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pet.Pet'),
        ),
        migrations.AddField(
            model_name='cancel_booking',
            name='purpose_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pet.PurposeAndDiet'),
        ),
        migrations.AddField(
            model_name='bookmarks_vet_news',
            name='doc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pet.Doctor'),
        ),
        migrations.AddField(
            model_name='bookmarks_vet_news',
            name='vet_news',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pet.Vet_News', verbose_name='Vet_News'),
        ),
        migrations.AddField(
            model_name='bookmarks_seminars',
            name='doc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pet.Doctor'),
        ),
        migrations.AddField(
            model_name='bookmarks_seminars',
            name='seminars',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pet.Seminars', verbose_name='Seminars'),
        ),
        migrations.AddField(
            model_name='bookmarks_conferences',
            name='conferences',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pet.Conferences', verbose_name='Conferences'),
        ),
        migrations.AddField(
            model_name='bookmarks_conferences',
            name='doc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pet.Doctor'),
        ),
        migrations.AddField(
            model_name='bookmarks_case_reports',
            name='case_reports',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pet.Case_Reports', verbose_name='Case_Reports'),
        ),
        migrations.AddField(
            model_name='bookmarks_case_reports',
            name='doc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pet.Doctor'),
        ),
        migrations.AddField(
            model_name='bookmarks_books',
            name='books',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pet.Book', verbose_name='Book'),
        ),
        migrations.AddField(
            model_name='bookmarks_books',
            name='doc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pet.Doctor'),
        ),
        migrations.AddField(
            model_name='bookmarks_article',
            name='article_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pet.Articles', verbose_name='Articles'),
        ),
        migrations.AddField(
            model_name='bookmarks_article',
            name='doc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pet.Doctor'),
        ),
        migrations.AddField(
            model_name='assessment',
            name='purpose_id',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='pet.PurposeAndDiet'),
        ),
    ]
